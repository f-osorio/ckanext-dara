<!-- <?xml version="1.0" encoding="UTF-8"?>-->

{# dara xml for RESOURCES 
=========================
schema and example files: 
http://www.da-ra.de/en/technical-information/doi-registration/

actually generated by macros: #}
{% import 'macros/dara_metadata.xml' as macros %}


{#{% set auto = h.dara_auto_fields() %}#}
{% set pkg = h.dara_pkg() %}
{% set author = h.dara_first_author() %}
{% set dara_authors = h.dara_additional_authors() %}

{% set res = h.dara_resource() %}
{% set url = h.dara_resource_url(res.url) %}


{# {% set debug = h.dara_debug() %} #}

<resource xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:noNamespaceSchemaLocation="doi:10.4232/10.mdsxsd.3.1">

<!-- this is a Dataset (file) -->
<resourceType>2</resourceType> 

{{ macros.resourceIdentifier(res.id, res.dara_currentVersion)}} 

{# 1. title #}
{{ macros.titles(res.name, 'en') }}  

{# 2. other titles #}
{#XXX not implemented in resources 
{{ macros.otherTitles('en', pkg.dara_OtherTitle or None, pkg.dara_OtherTitleType or None) }} 
#}

{# TODO 3. collective title  #}
      
{# 4. creators  TODO: 4.2 institution #}
{#XXX for now we take the authors given in the collection here #}
<creators>  
{{ macros.creator(author.firstname, author.lastname) }}
{% for dara_author in dara_authors %}
    {{ macros.creator(dara_author.firstname, dara_author.lastname) }}
{% endfor %}
</creators>

{# 8. URL, 9. DOI proposal #}
{#XXX might be better to store doi_proposal in resource itself #}
{% set doi = pkg.dara_DOI_Proposal ~ '.' ~ res.dara_doiid %}
{{ macros.doi(url, doi) }}

{# *12.publication date #}
{#XXX not implemented for resources #}
{{ macros.publicationDate(pkg.dara_PublicationDate) }}

{# *28/29 availability controlled/free #}
{#XXX not implemented for resources #}
{{ macros.availability(pkg.dara_Availabilitycontrolled, 'en', pkg.dara_Availabilityfree) }}

{# 11. resource language #}
{#XXX not implemented for resources #}
{{ macros.resourceLanguage(pkg.dara_language or None) }}

{# 13. alternative identifier 
XXX not implemented for resource, and we can't use pkg.identifiers here
{{ macros.alternativeIDs(pkg.dara_AlternativeIdentifier_ID or None, pkg.dara_AlternativeIdentifier_Type or None) }}
#}

{# 17. description #}
{% if res.description %}
{{ macros.description(res.description) }}
{% endif %}

{# XXX controlled not implemented yet; can have multiple entries #}  
{#  18. geographic coverage controlled/free #}
{#XXX not implemented for resources #}
{{ macros.geographicCoverages('en', pkg.dara_geographicCoverage or None, pkg.dara_geographicCoverageFree or None) }}

{# 19. sampled universe #}
{#XXX we are using 'None' as fallback since the schema is not correct here.
dara expects content, but schema does not force it #}
{#XXX not implemented for resources #}
{{ macros.universes('en', pkg.dara_universeSampled or None) }}

{# 20. sampling #}
{#XXX not implemented for resources #}
{{ macros.samplings('en', pkg.dara_Sampling or None) }} {#XXX lang not implemented #}

{# 31. relation #}
{# rel type '9' indicates 'IsPartOf' and references the collection (in our case) #}
{# we need the container element here because the macro only creates single
relations since collection do need to refer to more than one resource #}
<relations>
{{ macros.relation('DOI', pkg.dara_DOI_Proposal, 9) }}
</relations>


</resource>


