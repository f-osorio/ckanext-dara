<!-- <?xml version="1.0" encoding="UTF-8"?>-->

{# dara XML for Datasets (Collections) #}

{% import 'macros/dara_metadata.xml' as macros %}


{% set auto = h.dara_auto_fields() %}
{% set pkg = h.dara_pkg() %}
{% set author = h.dara_first_author() %}
{% set dara_authors = h.dara_additional_authors() %}

{# {% set debug = h.dara_debug() %} #}

{#
schema and example files: 
http://www.da-ra.de/en/technical-information/doi-registration/
#}


<resource xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:noNamespaceSchemaLocation="doi:10.4232/10.mdsxsd.3.1">

<!-- this is a Collection -->
<resourceType>1</resourceType> 
{{ macros.resourceIdentifier(pkg.id, pkg.dara_currentVersion)}} 

{# 1. title #}
{{ macros.titles(pkg.title, 'en') }}  

{# 2. other titles #}
{{ macros.otherTitles(
    'en', 
    pkg.dara_OtherTitle or None, 
    pkg.dara_OtherTitleType or None) 
}} 

{# TODO 3. collective title  #}
      
{# 4. creators  TODO: 4.2 institution #}
<creators>  
{{ macros.creator(author.firstname, author.lastname) }}
{% for dara_author in dara_authors %}
    {{ macros.creator(dara_author.firstname, dara_author.lastname) }}
{% endfor %}
</creators>

{# 8. URL, 9. DOI proposal #}
{{ macros.doi(auto.URL, pkg.dara_DOI_Proposal) }}

{# *12.publication date #}
{{ macros.publicationDate(pkg.dara_PublicationDate) }}

{# *28/29 availability controlled/free 
default is '1' (Download)
#}
{{ macros.availability(
    pkg.dara_Availabilitycontrolled or '1', 
    'en', 
    pkg.dara_Availabilityfree) 
}}

{# 11. resource language #}
{{ macros.resourceLanguage(pkg.dara_language or None) }}

{# 13. alternative identifier #}
{{ macros.alternativeIDs(
    pkg.dara_AlternativeIdentifier_ID or None, 
    pkg.dara_AlternativeIdentifier_Type or None) 
}}

{# 17. description #}
{{ macros.description(pkg.notes) }}

{# XXX controlled not implemented yet; can have multiple entries #}  
{#  18. geographic coverage controlled/free #}
{{ macros.geographicCoverages(
    'en', 
    pkg.dara_geographicCoverage or None, 
    pkg.dara_geographicCoverageFree or None) 
}}

{# 19. sampled universe #}
{#XXX we are using 'None' as fallback since the schema is not correct here.
dara expects content, but schema does not force it #}
{{ macros.universes('en', pkg.dara_universeSampled or None) }}

{# 20. sampling #}
{{ macros.samplings('en', pkg.dara_Sampling or None) }} {#XXX lang not implemented #}

{# 31. relation #}
{# rel type '10' indicates 'HasPartOf' and references the resource (in our
case) #}
<relations>
{% for res in pkg.resources %}
{#    {% set doi = pkg.dara_DOI_Proposal ~ '.' ~ res.dara_doi_num %} #}
    
    {# this is possible since ressources are registered before the
    collection. So if we have already a DOI we can use it here, otherwise we
    use the resource url. Either way, the relation is *always* registered #}
    {% if res.dara_DOI %}
        {%set identifier_type = 'DOI' %}
    {% else %}
        {% set identifier_type = 'URL' %}
    {% endif %}
    {% set identifier = res.dara_DOI or h.dara_resource_url(res.url) %}

    {# '10' indicates 'HasPart' #}
    {{ macros.relation(identifier_type, identifier, 10) }}
{% endfor %}
</relations>




</resource>


